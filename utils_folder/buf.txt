1. 코딩환경 구성의 건
  - 주피터 노트북에서 실행할 것인지 로컬 서버에 VS code깔아서 진행 할 것인지?
  - git을 활용하기 위해서는 VS code가 편리하긴 하다. 
  - git과 VS code를 활용하기 위해 툴 사용 방법을 처음부터 배워야한다.
  - 리눅스에서 git과 VS code 설치를 진행하여야 한다.

2. 역할 분배의 건(호칭 생략)
  - 이원희 :
  - 강경만 :
  - 박희용 :
  - 손명원 : 
  - 신충호 : 

3. AI 라이브러리 활용의 건
  - tf를 사용할건지 torch를 사용할건지
  - 논문 및 github 활용면에서는 torch를 사용하는게 압도적으로 유리
  - 하지만 지금까지 배운거는 tf이므로 팀원들은 tf활용이 편리할 것으로 예상
  - tf활용시 전이학습 방법 사용 불가 및 학습 구조 코딩 필요(github에서 대부분 torch를 활용하여 코딩 됐으므로)
                                                                                                                        *tf: TensorFlow
4. Source Data 활용의 건
  - 어떤 Data 활용할지(coco, ) 

5. 프로젝트 설계 구조 
- 프로젝트 패키지
  - train(모듈)
	- pipelines(서브모듈) : 데이터 전처리 etc
	- networks(서브모듈) : net structure, loss, metrics etc
  - inference(모듈)
	- pipelines(서브모듈) : 데이터 통신, 프로세스별 io etc
	- networks(서브모듈) : inference structure etc
  - utils(모듈): 기타 잡다한 것들


datasets 
https://safebooru.org/
https://www.kaggle.com/datasets/alamson/safebooru
https://www.gwern.net/Danbooru2021#kaggle

https://github.com/KUR-creative/SickZil-Machine/releases#bottom
https://github.com/RustingRobot/Kea

https://github.com/taesungp/contrastive-unpaired-translation
Canny edge detect가 가장 가능성있음.